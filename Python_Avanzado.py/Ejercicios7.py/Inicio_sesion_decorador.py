''' Est√°s desarrollando un sistema de autenticaci√≥n para una aplicaci√≥n web y 
deseas implementar un sistema de inicio de sesi√≥n que verifique si las 
credenciales proporcionadas por el usuario son v√°lidas antes de permitir el 
acceso a ciertas funciones. 

Adem√°s, deseas que una vez que el usuario haya 
iniciado sesi√≥n correctamente, se le proporcione informaci√≥n personal.
 
Implementa lo siguiente:

1. Un registro de usuarios que contenga informaci√≥n adicional, como el 
nombre completo y el correo electr√≥nico.

2. Un decorador llamado 
verificar_inicio_sesion que acepte el nombre de 
usuario y la contrase√±a como argumentos. Este decorador verificar√° si las 
credenciales proporcionadas son v√°lidas compar√°ndolas con el registro de 
usuarios. Si las credenciales son v√°lidas, la funci√≥n decorada se ejecutar√° y 
se le pasar√° como argumento la informaci√≥n personal del usuario.

3. Una funci√≥n llamada 
informacion_usuario que imprima la informaci√≥n personal 
del usuario despu√©s de que haya iniciado sesi√≥n correctamente.

Implementa este sistema de inicio de sesi√≥n utilizando decoradores'''

# Registro de usuarios con informaci√≥n adicional
registro_usuarios = {
  "raionhato": {
    "password": "1234",
    "nombre": "Luis Carlos Quinch√≠a",
    "correo": "raionhato@ejemplo.com"
    },
    "admin": {
    "password": "adminpass",
    "nombre": "Administrador",
    "correo": "admin@ejemplo.com"
    }
}

# Decorador para verificar el inicio de sesi√≥n
def verificar_inicio_sesion(usuario, contrasena):
    def decorador(funcion):
        def wrapper(*args, **kwargs):
            if usuario in registro_usuarios and registro_usuarios[usuario]["password"] == contrasena:
                print("‚úÖ Inicio de sesi√≥n exitoso.")
                info_personal = {
                    "nombre": registro_usuarios[usuario]["nombre"],
                    "correo": registro_usuarios[usuario]["correo"]
                }
                return funcion(info_personal, *args, **kwargs)
            else:
                print("‚õî Credenciales inv√°lidas. Acceso denegado.")
        return wrapper
    return decorador

# Funci√≥n para mostrar la informaci√≥n del usuario
def informacion_usuario(info_personal):
    print(f"üë§ Informaci√≥n del Usuario:")
    print(f"Nombre: {info_personal['nombre']}")
    print(f"Correo: {info_personal['correo']}")

# Ejemplo de uso
while True:
    print("\n--- Sistema de Inicio de Sesi√≥n ---")
    usuario = input("Ingrese su nombre de usuario: ")
    contrasena = input("Ingrese su contrase√±a: ")
     # Aplicamos el decorador con los datos proporcionados
    decorada = verificar_inicio_sesion(usuario, contrasena)(informacion_usuario)
    decorada()  # Llamamos la funci√≥n decorada
    continuar = input("¬øDesea intentar iniciar sesi√≥n nuevamente? (s/n): ")
    if continuar.lower() != 's':
        print("Saliendo del sistema de inicio de sesi√≥n.")
        break